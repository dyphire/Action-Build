name:  KikoPlay build

on:
  workflow_dispatch:
    inputs:
      repo:
        required: true
        default: 'KikoPlayProject/KikoPlay'
      ref:
        required: true
        default: 'master'

jobs:
  build:
    name: Build
    # 运行平台,  windows-latest目前是windows server 2022
    runs-on: windows-2019
    strategy:
      # 矩阵配置
      matrix:
        qt_ver: [5.15.2]
        qt_target: [desktop]
        qt_host: [windows]
        # mingw用不了
        # qt_arch: [win64_msvc2017_64, win32_msvc2017, win32_mingw53,win32_mingw73]
        qt_arch: [win64_msvc2015_64]
        msvc_arch: [x64]

    steps:
      - uses: actions/checkout@v3.1.0
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1
      - name: Install msvc
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          # Version of Qt to install
          version: ${{ matrix.qt_ver }}
          host: ${{ matrix.qt_host }}
          # Target platform for build
          target: ${{ matrix.qt_target }}
          # Architecture for Windows/Android
          arch: ${{ matrix.qt_arch }}
          tools: 'tools_qtcreator,qt.tools.qtcreator'
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '4dacd997a589a9ed67a5d74ed580056ad0341775'
          runVcpkgInstall: true
      - name: Build kikoplay
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
          cmake -G "Visual Studio 14 2015" -A "x64" -B build -S . "-DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DUSE_VCPKG_QT=FALSE -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
